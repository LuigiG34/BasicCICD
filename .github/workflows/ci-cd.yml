name: CI/CD (Hostinger LiteSpeed)

on:
  push:
    branches: [ "master" ]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_sqlite
          tools: composer:v2

      - name: Install dev dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Run tests (SQLite)
        env:
          APP_ENV: test
          SYMFONY_DEPRECATIONS_HELPER: weak
        run: ./vendor/bin/phpunit -v

  deploy:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP for build
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl
          tools: composer:v2

      - name: Install prod dependencies
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      - name: Deploy via rsync (manual)
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY:  ${{ secrets.SSH_KEY }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y rsync

          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${SSH_PORT:-22}" "$SSH_HOST" >> ~/.ssh/known_hosts

          rsync -az --delete \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="var/cache/*" \
            --exclude="var/log/*" \
            --exclude=".env" \
            --exclude=".env.test" \
            --exclude=".env.local" \
            -e "ssh -i ~/.ssh/id_ed25519 -p ${SSH_PORT:-22}" \
            ./ "${SSH_USER}@${SSH_HOST}:${REMOTE_PATH}"

      - name: Post-deploy on server (DB debug)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: false    # don't abort on failure, we want the message
          debug: true
          script: |
            set -eu
            cd "${{ secrets.REMOTE_PATH }}"
            printf 'PWD=%q\n' "$(pwd)"

            # make a tiny PHP to test PDO and always print the error
            cat > /tmp/pdo_test.php <<'PHP'
            <?php
            error_reporting(E_ALL); ini_set('display_errors', 1);
            $host = $_ENV['H']; $db = $_ENV['D']; $user = $_ENV['U']; $pass = $_ENV['P'];
            $dsn = "mysql:host=$host;dbname=$db;charset=utf8mb4";
            echo "Testing DSN=$dsn user=$user\n";
            try {
              new PDO($dsn, $user, $pass, [PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION]);
              echo "PDO OK\n"; exit(0);
            } catch (Throwable $e) {
              echo "PDO FAIL: ".$e->getMessage()."\n"; exit(2);
            }
            PHP

            H='${{ secrets.DB_HOST }}' D='${{ secrets.DB_NAME }}' U='${{ secrets.DB_USER }}' P='${{ secrets.DB_PASS }}' \
            php -d display_errors=1 /tmp/pdo_test.php || true